group = 'com.bro2.gradle'
version '0.2.1'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
    }
}

apply plugin: 'groovy'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    testCompile 'junit:junit:4.12'
    testRuntime files(createClasspathManifest)
    testCompile gradleTestKit()
}

repositories {
    jcenter()
}


task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier "sources"
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            groupId 'com.bro2.gradle'
            artifactId 'cmdbatch'
            version '0.2.1'
        }
    }
}

bintray {
    user = property('user')
    key = property('key')
    publications = ['MyPublication']
    publish = true
//    override = true

    pkg {
        repo = 'repo-maven-gradle'
        name = 'cmdbatch'
        licenses = ['MIT']
        desc = 'a gradle plugin which can auto execute a batch of commands'
        vcsUrl = 'https://github.com/liu-bro2/gradle-cmdbatch'
        websiteUrl = 'https://github.com/liu-bro2/gradle-cmdbatch'
        issueTrackerUrl = 'https://github.com/liu-bro2/gradle-cmdbatch/issues'
        githubRepo = 'liu-bro2/gradle-cmdbatch'
        githubReleaseNotesFile = 'README.md'

        version {
            vcsTag = 'v0.2.1'
            released  = new Date()
            desc = 'with fix output path error'
        }
    }

}